{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Configure axios defaults\naxios.defaults.withCredentials=true;// Check if user is authenticated on app load\nuseEffect(()=>{checkAuthStatus();},[]);const checkAuthStatus=async()=>{try{const response=await axios.get('/api/auth/me');if(response.data.success){setUser(response.data.data.user);}}catch(error){// User is not authenticated, clear any stale data\nsetUser(null);}finally{setLoading(false);}};const login=async(email,password)=>{try{const response=await axios.post('/api/auth/login',{email,password});if(response.data.success){setUser(response.data.data.user);toast.success('Login successful!');return{success:true};}}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed';toast.error(errorMessage);return{success:false,error:errorMessage};}};const register=async userData=>{try{const response=await axios.post('/api/auth/register',userData);if(response.data.success){setUser(response.data.data.user);toast.success('Registration successful! Welcome to Erino!');return{success:true};}else{const errorMessage=response.data.error||'Registration failed';toast.error(errorMessage);return{success:false,error:errorMessage};}}catch(error){let errorMessage='Registration failed';if(error.response){// Server responded with error\nif(error.response.status===409){errorMessage='An account with this email already exists';}else if(error.response.status===400){errorMessage=error.response.data.error||'Please check your input and try again';}else if(error.response.status===500){errorMessage='Server error. Please try again later';}else{errorMessage=error.response.data.error||'Registration failed';}}else if(error.request){// Network error\nerrorMessage='Network error. Please check your connection and try again';}else{// Other error\nerrorMessage=error.message||'An unexpected error occurred';}toast.error(errorMessage);return{success:false,error:errorMessage};}};const logout=async()=>{try{await axios.post('/api/auth/logout');setUser(null);toast.success('Logged out successfully');}catch(error){console.error('Logout error:',error);// Even if logout fails on server, clear local state\nsetUser(null);}};const value={user,loading,login,register,logout,checkAuthStatus};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","defaults","withCredentials","checkAuthStatus","response","get","data","success","error","login","email","password","post","_error$response","_error$response$data","errorMessage","register","userData","status","request","message","logout","console","value","Provider"],"sources":["/Users/aditya/Desktop/erino/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios defaults\n  axios.defaults.withCredentials = true;\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get('/api/auth/me');\n      if (response.data.success) {\n        setUser(response.data.data.user);\n      }\n    } catch (error) {\n      // User is not authenticated, clear any stale data\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', { email, password });\n      \n      if (response.data.success) {\n        setUser(response.data.data.user);\n        toast.success('Login successful!');\n        return { success: true };\n      }\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Login failed';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      \n      if (response.data.success) {\n        setUser(response.data.data.user);\n        toast.success('Registration successful! Welcome to Erino!');\n        return { success: true };\n      } else {\n        const errorMessage = response.data.error || 'Registration failed';\n        toast.error(errorMessage);\n        return { success: false, error: errorMessage };\n      }\n    } catch (error) {\n      let errorMessage = 'Registration failed';\n      \n      if (error.response) {\n        // Server responded with error\n        if (error.response.status === 409) {\n          errorMessage = 'An account with this email already exists';\n        } else if (error.response.status === 400) {\n          errorMessage = error.response.data.error || 'Please check your input and try again';\n        } else if (error.response.status === 500) {\n          errorMessage = 'Server error. Please try again later';\n        } else {\n          errorMessage = error.response.data.error || 'Registration failed';\n        }\n      } else if (error.request) {\n        // Network error\n        errorMessage = 'Network error. Please check your connection and try again';\n      } else {\n        // Other error\n        errorMessage = error.message || 'An unexpected error occurred';\n      }\n      \n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n      setUser(null);\n      toast.success('Logged out successfully');\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Even if logout fails on server, clear local state\n      setUser(null);\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    checkAuthStatus\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}